{"version":3,"file":"static/js/589.bf8a1d54.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetailsInfo.jsx","pages/MovieDetails/MovieDetailsAdditionalInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/FetchAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"MovieDetails_img__uOAom\",\"title\":\"MovieDetails_title__cUGs9\",\"container\":\"MovieDetails_container__Ys+c9\",\"button\":\"MovieDetails_button__uXZxd\",\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"infoList\":\"MovieDetails_infoList__KylaC\",\"infoItem\":\"MovieDetails_infoItem__bqSRP\",\"infoText\":\"MovieDetails_infoText__N+-q+\",\"infoName\":\"MovieDetails_infoName__9+xy7\",\"spanVote\":\"MovieDetails_spanVote__rcQXt\",\"spanSlash\":\"MovieDetails_spanSlash__zbQUV\",\"spanVotes\":\"MovieDetails_spanVotes__9AGPQ\",\"navLink\":\"MovieDetails_navLink__uPVwm\",\"item\":\"MovieDetails_item__mbUY+\"};","import css from './MovieDetails.module.css';\n\nconst MovieDetailsInfo = ({ movie }) => {\n  return (\n    <div className={css.container}>\n      <img className={css.img} src={movie.poster_path} alt={movie.name} />\n      <div className={css.movieDetails}>\n        <h1 className={css.title}>{movie.title}</h1>\n        <ul className={css.infoList}>\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Vote / Votes</p>\n            <p className={css.infoText}>\n              <span className={css.spanVotes}>{movie.vote_average}</span>\n              <span className={css.spanSlash}> / </span>\n              <span className={css.spanVotes}>{movie.vote_count}</span>\n            </p>\n          </li>\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Popularity</p>\n            <p className={css.infoText}>{movie.popularity}</p>\n          </li>\n\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Original Title</p>\n            <p className={css.infoText}>{movie.original_title}</p>\n          </li>\n\n          <li className={css.infoItem}>\n            <p className={css.infoName}>Genre</p>\n            <p className={css.infoText}>{movie.genres}</p>\n          </li>\n        </ul>\n        <p className={css.infoName}>Overview</p>\n        <p>{movie.overview}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsInfo;\n","import css from './MovieDetails.module.css';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: darkslategrey;\n  }\n`;\n\nconst MovieDetailsAdditionalInfo = ({ backLinkHref }) => {\n  return (\n    <ul className={css.item}>\n      <li>\n        <StyledLink\n          className={css.navLink}\n          to=\"cast\"\n          state={{ from: backLinkHref }}\n        >\n          Cast\n        </StyledLink>\n      </li>\n      <li>\n        <StyledLink\n          className={css.navLink}\n          to=\"reviews\"\n          state={{ from: backLinkHref }}\n        >\n          Reviews\n        </StyledLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default MovieDetailsAdditionalInfo;\n","import { useEffect, useState } from 'react';\nimport { getMoviesById } from '../../services/FetchAPI';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport Loader from '../../components/Loader/Loader';\nimport MovieDetailsInfo from './MovieDetailsInfo';\nimport MovieDetailsAdditionalInfo from './MovieDetailsAdditionalInfo';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  console.log(movieId);\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchDataId = async () => {\n      try {\n        const film = await getMoviesById(movieId);\n        setMovie(film);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDataId();\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <div>\n          <Link className={css.button} to={backLinkHref}>\n            &#8592; Go back\n          </Link>\n          <MovieDetailsInfo movie={movie} />\n          <MovieDetailsAdditionalInfo backLinkHref={backLinkHref} />\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","//KEY ➡️ 8a1b3ad75f8d6d96df0b528cd3b953bf\n//EXAMPLE ➡️ https://api.themoviedb.org/3/movie/550?api_key=8a1b3ad75f8d6d96df0b528cd3b953bf\n// BASE URL ➡️ https://api.themoviedb.org/3\n\nimport axios from 'axios';\n\nconst key = '8a1b3ad75f8d6d96df0b528cd3b953bf';\nconst URL = `https://api.themoviedb.org/3`;\nconst notFoundImageUrl = 'https://cdn-icons-png.flaticon.com/512/25/25634.png';\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/day?api_key=${key}&page=${1}`\n    );\n    const { results } = response.data;\n    const films = results.map(film => {\n      const { title, id, overview } = film;\n      return { title, id, overview };\n    });\n    return { films };\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst getPosterSrc = url =>\n  url ? 'https://image.tmdb.org/t/p/w500' + url : notFoundImageUrl;\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(`${URL}/movie/${id}?api_key=${key}`);\n    const {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    } = response.data;\n    return {\n      poster_path: getPosterSrc(poster_path),\n      title,\n      release_date,\n      overview,\n      genres:\n        genres &&\n        genres\n          .map(({ name }) => {\n            return name;\n          })\n          .join(' '),\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/credits?api_key=${key}`\n    );\n\n    return data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path: getPosterSrc(profile_path),\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return data.results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["movie","className","css","src","poster_path","alt","name","title","vote_average","vote_count","popularity","original_title","genres","overview","StyledLink","styled","NavLink","backLinkHref","to","state","from","movieId","useParams","console","log","useState","setMovie","location","useLocation","loading","setLoading","useEffect","fetchDataId","getMoviesById","film","Loader","key","URL","getPopularMovies","axios","response","results","data","films","map","id","getPosterSrc","url","release_date","join","getMoviesCast","cast","character","profile_path","getMovieByQuery","query","getMovieByReviews","author","content"],"sourceRoot":""}