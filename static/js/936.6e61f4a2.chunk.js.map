{"version":3,"file":"static/js/936.6e61f4a2.chunk.js","mappings":"sKACA,MAAuB,wBAAvB,EAAsD,wBAAtD,EAAwF,2B,iBCE3EA,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAClC,OACE,eAAIC,UAAWC,EAAf,SACGH,EAAOI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,eAAaJ,UAAWC,EAAxB,UACE,SAAC,KAAD,CACED,UAAWC,EACXI,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMR,GAHjB,SAKGK,KANID,EAUZ,KAGN,C,+ICpBD,EAAwB,oB,kBCqCxB,EA/Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACMV,GAAWW,EAAAA,EAAAA,MACjB,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACX,IAAME,EAAS,mCAAG,gHAEUC,EAAAA,EAAAA,MAFV,gBAENC,EAFM,EAENA,MACRP,EAAUO,GAHI,gDAKdC,QAAQC,IAAR,MALc,yBAOdN,GAAW,GAPG,4EAAH,qDAUfE,GACD,GAAE,KAED,iCACE,eAAId,UAAWC,EAAf,4BACCU,GACC,SAACQ,EAAA,EAAD,IAEArB,EAAOsB,OAAS,IAAK,SAACvB,EAAA,EAAD,CAAWC,OAAQA,EAAQC,SAAUA,MAIjE,C,+LC9BKsB,EAAM,mCACNC,EAAG,+BAEIP,EAAgB,mCAAG,iHAELQ,EAAAA,EAAAA,IAAA,UAClBD,EADkB,uCACgBD,EADhB,SAC4B,IAHvB,cAEtBG,EAFsB,OAKpBC,EAAYD,EAASE,KAArBD,QACFT,EAAQS,EAAQvB,KAAI,SAAAyB,GAExB,MAAO,CAAEvB,MADuBuB,EAAxBvB,MACQD,GADgBwB,EAAjBxB,GACKyB,SADYD,EAAbC,SAEpB,IAT2B,kBAUrB,CAAEZ,MAAAA,IAVmB,gCAY5BC,QAAQC,IAAR,MAZ4B,yDAAH,qDAevBW,EAAe,SAAAC,GAAG,OACtBA,EAAM,kCAAoCA,EAjBnB,qDAgBD,EAGXC,EAAa,mCAAG,WAAM5B,GAAN,oHAEFoB,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA0BnB,EAA1B,oBAAwCkB,IAFtC,cAEnBG,EAFmB,SAarBA,EAASE,KATXM,EAJuB,EAIvBA,YACA5B,EALuB,EAKvBA,MACA6B,EANuB,EAMvBA,aACAL,EAPuB,EAOvBA,SACAM,EARuB,EAQvBA,OACAC,EATuB,EASvBA,aACAC,EAVuB,EAUvBA,WACAC,EAXuB,EAWvBA,WACAC,EAZuB,EAYvBA,eAZuB,kBAclB,CACLN,YAAaH,EAAaG,GAC1B5B,MAAAA,EACA6B,aAAAA,EACAL,SAAAA,EACAM,OACEA,GACAA,EACGhC,KAAI,YACH,OADiB,EAAXqC,IAEP,IACAC,KAAK,KACVL,aAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAC,eAAAA,IA7BuB,gCAgCzBrB,QAAQC,IAAR,MAhCyB,yDAAH,sDAoCbuB,EAAa,mCAAG,WAAMtC,GAAN,kGAEFoB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACLnB,EADK,4BACiBkB,IAHf,uBAEjBK,EAFiB,EAEjBA,KAFiB,kBAMlBA,EAAKgB,KAAKxC,KAAI,gBAAGC,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,KAAMI,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,MAA4C,CAC/DzC,GAAAA,EACAoC,KAAAA,EACAI,UAAAA,EACAC,aAAcf,EAAae,GAJR,KANI,gCAazB3B,QAAQC,IAAR,MAbyB,yDAAH,sDAiBb2B,EAAe,mCAAG,WAAMC,GAAN,kGAEJvB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,iCACUD,EADV,kBACuByB,IAHnB,uBAEnBpB,EAFmB,EAEnBA,KAFmB,kBAKpBA,EAAKD,QAAQvB,KAAI,kBAAoB,CAAEC,GAAtB,EAAGA,GAAuBC,MAA1B,EAAOA,MAAP,KALG,gCAO3Ba,QAAQC,IAAR,MAP2B,yDAAH,sDAWf6B,EAAiB,mCAAG,WAAM5C,GAAN,kGAENoB,EAAAA,EAAAA,IAAA,UAClBD,EADkB,kBACLnB,EADK,4BACiBkB,IAHX,uBAErBK,EAFqB,EAErBA,KAFqB,kBAKtBA,EAAKD,QAAQvB,KAAI,kBAA8B,CACpDC,GADsB,EAAGA,GAEzB6C,OAFsB,EAAOA,OAG7BC,QAHsB,EAAeA,QAAf,KALK,gCAW7BhC,QAAQC,IAAR,MAX6B,yDAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/FetchAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MovieList_item__tDivI\",\"list\":\"MovieList_list__yjDCC\",\"navLink\":\"MovieList_navLink__Y0vr9\"};","import css from './MovieList.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieList = ({ movies, location }) => {\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id} className={css.item}>\n            <NavLink\n              className={css.navLink}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </NavLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useEffect, useState } from 'react';\nimport { getPopularMovies } from '../../services/FetchAPI';\nimport { useLocation } from 'react-router-dom';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport css from './Home.module.css';\nimport Loader from '../../components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      try {\n        const { films } = await getPopularMovies();\n        setMovies(films);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return (\n    <>\n      <h1 className={css.title}>Trending today</h1>\n      {loading ? (\n        <Loader />\n      ) : (\n        movies.length > 0 && <MovieList movies={movies} location={location} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","//KEY ➡️ 8a1b3ad75f8d6d96df0b528cd3b953bf\n//EXAMPLE ➡️ https://api.themoviedb.org/3/movie/550?api_key=8a1b3ad75f8d6d96df0b528cd3b953bf\n// BASE URL ➡️ https://api.themoviedb.org/3\n\nimport axios from 'axios';\n\nconst key = '8a1b3ad75f8d6d96df0b528cd3b953bf';\nconst URL = `https://api.themoviedb.org/3`;\nconst notFoundImageUrl = 'https://cdn-icons-png.flaticon.com/512/25/25634.png';\nexport const getPopularMovies = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}/trending/movie/day?api_key=${key}&page=${1}`\n    );\n    const { results } = response.data;\n    const films = results.map(film => {\n      const { title, id, overview } = film;\n      return { title, id, overview };\n    });\n    return { films };\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst getPosterSrc = url =>\n  url ? 'https://image.tmdb.org/t/p/w500' + url : notFoundImageUrl;\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await axios.get(`${URL}/movie/${id}?api_key=${key}`);\n    const {\n      poster_path,\n      title,\n      release_date,\n      overview,\n      genres,\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    } = response.data;\n    return {\n      poster_path: getPosterSrc(poster_path),\n      title,\n      release_date,\n      overview,\n      genres:\n        genres &&\n        genres\n          .map(({ name }) => {\n            return name;\n          })\n          .join(' '),\n      vote_average,\n      vote_count,\n      popularity,\n      original_title,\n    };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/credits?api_key=${key}`\n    );\n\n    return data.cast.map(({ id, name, character, profile_path }) => ({\n      id,\n      name,\n      character,\n      profile_path: getPosterSrc(profile_path),\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/search/movie?api_key=${key}&query=${query}`\n    );\n    return data.results.map(({ id, title }) => ({ id, title }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `${URL}/movie/${id}/reviews?api_key=${key}`\n    );\n    return data.results.map(({ id, author, content }) => ({\n      id,\n      author,\n      content,\n    }));\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["MovieList","movies","location","className","css","map","id","title","to","state","from","useState","setMovies","useLocation","loading","setLoading","useEffect","fetchData","getPopularMovies","films","console","log","Loader","length","key","URL","axios","response","results","data","film","overview","getPosterSrc","url","getMoviesById","poster_path","release_date","genres","vote_average","vote_count","popularity","original_title","name","join","getMoviesCast","cast","character","profile_path","getMovieByQuery","query","getMovieByReviews","author","content"],"sourceRoot":""}